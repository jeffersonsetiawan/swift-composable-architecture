{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Initializes a reducer that updates bindable state when it receives binding actions."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingreducer\/init()"]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"externalID":"s:22ComposableArchitecture14BindingReducerVACyxq_q_Gyc5StateQy_RszAA14BindableActionR_q0_Rs_rlufc","roleHeading":"Initializer","role":"symbol","title":"init()","symbolKind":"init","modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"() "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"text":"Action","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"title":"BindableAction","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","role":"symbol","abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","title":"BindingReducer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"url":"\/documentation\/composablearchitecture\/bindingreducer\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a reducer that updates bindable state when it receives binding actions."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"role":"symbol","title":"State","type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction\/state","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"symbol","abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","url":"\/documentation\/composablearchitecture\/bindingaction","role":"symbol","kind":"symbol","title":"BindingAction","abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"}}}