{"abstract":[{"type":"text","text":"Creates a new task result by evaluating an async throwing closure, capturing the returned"},{"type":"text","text":" "},{"text":"value as a success, or any thrown error as a failure.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"catching","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"body","content":[{"inlineContent":[{"text":"An async, throwing closure.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer is most often used in an async effect being returned from a reducer. See the"},{"type":"text","text":" "},{"type":"text","text":"documentation for "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","type":"reference"},{"text":" for a concrete example.","type":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/taskresult\/init(catching:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"]]},"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'Result', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.4#Moving-off-of-TaskResult","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(catching:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"platforms":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"catching","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"modules":[{"name":"ComposableArchitecture"}],"title":"init(catching:)","roleHeading":"Initializer","role":"symbol","externalID":"s:22ComposableArchitecture10TaskResultO8catchingACyxGxyYaYbKXE_tYacfc","symbolKind":"init"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/init(catching:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(catching:)","title":"init(catching:)","kind":"symbol","abstract":[{"text":"Creates a new task result by evaluating an async throwing closure, capturing the returned","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value as a success, or any thrown error as a failure."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/taskresult\/init(catching:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"catching"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"url":"\/documentation\/composablearchitecture\/taskresult","deprecated":true,"type":"topic","title":"TaskResult","abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" "},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"text":" ","type":"text"},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskResult"}],"navigatorTitle":[{"text":"TaskResult","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","kind":"symbol"}}}