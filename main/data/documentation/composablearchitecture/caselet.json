{"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"]}],"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"]]},"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"EnumState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"EnumAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CaseState"},{"kind":"text","text":", "},{"text":"CaseAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Content"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"platforms":[],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"title":"CaseLet","symbolKind":"struct","externalID":"s:22ComposableArchitecture7CaseLetV","modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet"]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]"}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/fromCaseAction":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fromCaseAction"},{"kind":"text","text":": ("},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","title":"fromCaseAction","url":"\/documentation\/composablearchitecture\/caselet\/fromcaseaction","deprecated":true,"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"type":"topic","title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","title":"SwiftUICore.View","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(_:action:then:fileID:filePath:line:column:)":{"role":"symbol","title":"init(_:action:then:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"type":"text","text":" view that computes content depending on if a store of enum state"},{"type":"text","text":" "},{"text":"matches a particular case.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"kind":"text","text":") -> "},{"text":"EnumAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"type":"topic","deprecated":true,"kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/tocasestate","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","title":"toCaseState","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCaseState"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/body":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","abstract":[],"role":"symbol","deprecated":true,"title":"body","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","url":"\/documentation\/composablearchitecture\/caselet\/body"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/content":{"abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"content","kind":"identifier"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"}],"url":"\/documentation\/composablearchitecture\/caselet\/content","kind":"symbol","title":"content","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","role":"symbol","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(state:then:)":{"abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" view that computes content depending on if a store of enum state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"matches a particular case."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"EnumState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CaseState"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"EnumAction","type":"codeVoice"},{"type":"text","text":" is "},{"code":"CaseAction","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Content","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/composablearchitecture\/caselet\/init(state:then:)","kind":"symbol","title":"init(state:then:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)","role":"symbol","type":"topic"}}}