{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations"]]},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Type Alias","navigatorTitle":[{"kind":"identifier","text":"Cases"}],"symbolKind":"typealias","modules":[{"name":"ComposableArchitecture","relatedModules":["CasePaths"]}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Cases","kind":"identifier"}],"extendedModule":"CasePaths","externalID":"s:9CasePaths0A8PathablePAAE5Casesa::SYNTHESIZED::s:22ComposableArchitecture13BindingActionV","title":"BindingAction.Cases"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cases","kind":"identifier"},{"kind":"text","text":" = "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CasePathable.Cases"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingaction\/cases"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/CasePathable-Implementations":{"type":"topic","role":"collectionGroup","title":"CasePathable Implementations","url":"\/documentation\/composablearchitecture\/bindingaction\/casepathable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/Cases":{"title":"BindingAction.Cases","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cases"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Cases","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingaction\/cases","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","url":"\/documentation\/composablearchitecture\/bindingaction","role":"symbol","kind":"symbol","title":"BindingAction","abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"}}}