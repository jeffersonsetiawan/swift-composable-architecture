{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/symbolEffect(_:options:value:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.symbolEffect(_:options:value:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"symbolEffect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SymbolEffectOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"roleHeading":"Instance Method","title":"symbolEffect(_:options:value:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"beta":false,"introducedAt":"17.0","deprecated":false,"name":"iOS","unavailable":false},{"introducedAt":"14.0","name":"macOS","deprecated":false,"beta":false,"unavailable":false},{"unavailable":false,"name":"tvOS","introducedAt":"17.0","beta":false,"deprecated":false},{"introducedAt":"10.0","unavailable":false,"name":"watchOS","beta":false,"deprecated":false}],"role":"symbol","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE12symbolEffect_7options5valueQrqd___7Symbols06SymbolE7OptionsVqd_0_tAG08DiscreteiE0Rd__AG0iE0Rd__SQRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/symboleffect(_:options:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"symbolEffect"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"effect"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"text":"SymbolEffectOptions","preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV","kind":"typeIdentifier"},{"kind":"text","text":" = .default, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"text":"U","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"DiscreteSymbolEffect","kind":"typeIdentifier","preciseIdentifier":"s:7Symbols20DiscreteSymbolEffectP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"SymbolEffect","preciseIdentifier":"s:7Symbols12SymbolEffectP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":" : "},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"kind":"text","text":"\n"}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/symbolEffect(_:options:value:)":{"type":"topic","role":"symbol","title":"symbolEffect(_:options:value:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/symbolEffect(_:options:value:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"symbolEffect","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SymbolEffectOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/caselet\/symboleffect(_:options:value:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"type":"topic","title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]}}}