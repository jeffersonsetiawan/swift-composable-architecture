{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"text":"(","kind":"text"},{"text":"range","kind":"externalParam"},{"kind":"text","text":": [any "},{"preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScale5rangeQrSayAD05ChartF5Shape_pG_tF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","title":"chartSymbolScale(range:)","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"role":"symbol","symbolKind":"method","platforms":[{"beta":false,"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"16.0"},{"name":"macOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"beta":false,"introducedAt":"16.0","deprecated":false,"name":"tvOS","unavailable":false},{"introducedAt":"9.0","name":"watchOS","deprecated":false,"beta":false,"unavailable":false}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartSymbolScale(range:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.chartSymbolScale(range:)"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"chartSymbolScale","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"range"},{"text":": [any ","kind":"text"},{"text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/chartsymbolscale(range:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"type":"topic","title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","role":"collectionGroup","title":"View Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/chartSymbolScale(range:)":{"url":"\/documentation\/composablearchitecture\/caselet\/chartsymbolscale(range:)","title":"chartSymbolScale(range:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"range"},{"kind":"text","text":": [any "},{"preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartSymbolScale(range:)","role":"symbol","type":"topic","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"}}}