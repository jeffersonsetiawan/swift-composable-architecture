{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5"},"kind":"article","metadata":{"roleHeading":"Article","modules":[{"name":"ComposableArchitecture"}],"role":"article","title":"Migrating to 1.5"},"abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" operation on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" ","type":"text"},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"The Composable Architecture is under constant development, and we are always looking for ways to","type":"text"},{"type":"text","text":" "},{"text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest"},{"text":" ","type":"text"},{"text":"APIs, and this article contains some tips for doing so.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Many APIs have been soft-deprecated in this release and will be hard-deprecated in"},{"text":" ","type":"text"},{"type":"text","text":"a future minor release. We highly recommend updating your use of deprecated APIs to their newest"},{"text":" ","type":"text"},{"type":"text","text":"version as quickly as possible."}]}],"name":"Important"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Store-scoping-with-key-paths"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Scoping-performance"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Enum-driven-navigation-APIs","isActive":true}]}]}]},{"text":"Store scoping with key paths","type":"heading","anchor":"Store-scoping-with-key-paths","level":3},{"type":"paragraph","inlineContent":[{"text":"Prior to version 1.5 of the Composable Architecture, one was allowed to","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","isActive":true},{"type":"text","text":" a store with any kind of closures that"},{"text":" ","type":"text"},{"text":"transform the parent state to the child state, and child actions into parent actions:","type":"text"}]},{"syntax":"swift","code":["store.scope(","  state: (State) -> ChildState,","  action: (ChildAction) -> Action",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In practice you could typically use key paths for the "},{"code":"state","type":"codeVoice"},{"type":"text","text":" transformation since key path literals"},{"type":"text","text":" "},{"text":"can be promoted to closures. That means often scoping looked something like this:","type":"text"}]},{"code":["\/\/ ⚠️ Deprecated API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: { .child($0) }","  )",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, as of version 1.5 of the Composable Architecture, the version of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","isActive":true},{"type":"text","text":" that takes two closures is"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"soft-deprecated","type":"text"}]},{"type":"text","text":". Instead, you are to use the version of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"text":" that takes a key path for the ","type":"text"},{"type":"codeVoice","code":"state"},{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"argument, and a case key path for the "},{"type":"codeVoice","code":"action"},{"text":" argument.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is easiest to do when you are using the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro with your"},{"type":"text","text":" "},{"type":"text","text":"feature because then case key paths are automatically generated for each case of your action enum."},{"type":"text","text":" "},{"type":"text","text":"The above construction of "},{"code":"ChildView","type":"codeVoice"},{"type":"text","text":" now becomes:"}]},{"code":["\/\/ ✅ New API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: \\.child","  )",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax is now shorter and more symmetric, and there is a hidden benefit too. Because key paths"},{"text":" ","type":"text"},{"type":"text","text":"are "},{"type":"codeVoice","code":"Hashable"},{"text":", we are able to cache the store created by ","type":"text"},{"code":"scope","type":"codeVoice"},{"type":"text","text":". This means if the store is scoped"},{"type":"text","text":" "},{"text":"again with the same ","type":"text"},{"type":"codeVoice","code":"state"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"action"},{"type":"text","text":" arguments, we can skip creating a new store and instead"},{"text":" ","type":"text"},{"type":"text","text":"return the previously created one. This provides a lot of benefits, such as better performance, and"},{"type":"text","text":" "},{"type":"text","text":"a stable identity for features."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are some times when changing to this new scoping operator may be difficult. For example, if"},{"text":" ","type":"text"},{"type":"text","text":"you perform additional work in your scoping closure so that a simple key path does not work:"}]},{"code":["ChildView(","  store: store.scope(","    state: { ChildFeature(state: $0.child) }, ","    action: { .child($0) }","  )",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be handled by moving the work in the closure to a computed property on your state:"}]},{"type":"codeListing","syntax":"swift","code":["extension State {","  var childFeature: ChildFeature {","    ChildFeature(state: self.child) ","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And now the key path syntax works just fine:"}]},{"code":["ChildView(","  store: store.scope(","    state: \\.childFeature, ","    action: \\.child","  )",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Another complication is if you are using data from "},{"inlineContent":[{"type":"text","text":"outside"}],"type":"emphasis"},{"text":" the closure, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"inside"}]},{"type":"text","text":" the closure:"}]},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(","    state: { ","      ChildFeature(","        settings: viewStore.settings,","        state: $0.child","      ) ","    }, ","    action: { .child($0) }","  )",")"]},{"inlineContent":[{"type":"text","text":"In this situation you can add a subscript to your state so that you can pass that data into it:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension State {","  subscript(settings settings: Settings) -> ChildFeature {","    ChildFeature(","      settings: settings,","      state: self.child","    )","  }","}"]},{"inlineContent":[{"text":"Then you can use a subscript key path to perform the scoping:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["ChildView(","  store: store.scope(","    state: \\.[settings: viewStore.settings], ","    action: \\.child","  )",")"]},{"type":"paragraph","inlineContent":[{"text":"Another common case you may encounter is when dealing with collections. It is common in the","type":"text"},{"type":"text","text":" "},{"text":"Composable Architecture to use an ","type":"text"},{"code":"IdentifiedArray","type":"codeVoice"},{"text":" in your feature’s state and an","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","isActive":true},{"type":"text","text":" in your feature’s actions (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions"},{"text":" for more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"info on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"text":"). If you needed to scope your store down to one specific row of the","type":"text"},{"type":"text","text":" "},{"text":"identified domain, previously you would have done so like this:","type":"text"}]},{"type":"codeListing","code":["store.scope(","  state: \\.rows[id: id],","  action: { .rows(.element(id: id, action: $0)) }",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With case key paths it can be done simply like this:"}]},{"code":["store.scope(","  state: \\.rows[id: id],","  action: \\.rows[id: id]",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"These tricks should be enough for you to rewrite all of your store scopes using key paths, but if","type":"text"},{"text":" ","type":"text"},{"text":"you have any problems feel free to open a","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"reference"},{"type":"text","text":" on the repo."}]},{"level":2,"type":"heading","anchor":"Scoping-performance","text":"Scoping performance"},{"type":"paragraph","inlineContent":[{"text":"The performance characteristics for store scoping have changed in this release. The primary (and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"intended) way of scoping is along "},{"type":"emphasis","inlineContent":[{"type":"text","text":"stored"}]},{"text":" properties of child features. A very basic example of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is the following:"}]},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(state: \\.child, action: \\.child)",")"]},{"inlineContent":[{"text":"A less common (and less supported) form of scoping is along ","type":"text"},{"inlineContent":[{"text":"computed","type":"text"}],"type":"emphasis"},{"type":"text","text":" properties, for example like"},{"text":" ","type":"text"},{"type":"text","text":"this:"}],"type":"paragraph"},{"code":["extension ParentFeature.State {","  var computedChild: ChildFeature.State {","    ChildFeature.State(","      \/\/ Heavy computation here...","    )","  }","}","","ChildView(","  store: store.scope(state: \\.computedChild, action: \\.child)",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This style of scoping will incur a bit of a performance cost in 1.5 and moving forward. The cost"},{"type":"text","text":" "},{"text":"is greater the closer your scoping is to the root of your application. Leaf node features will not","type":"text"},{"text":" ","type":"text"},{"text":"incur as much of a cost.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the dedicated article "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping"},{"text":" for more information.","type":"text"}]},{"type":"heading","level":2,"text":"Enum-driven navigation APIs","anchor":"Enum-driven-navigation-APIs"},{"type":"paragraph","inlineContent":[{"text":"Prior to version 1.5 of the library, using enum state with navigation view modifiers, such as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":", "},{"code":"popover","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"navigationDestination"},{"type":"text","text":", etc, was quite verbose. You first needed to supply a"},{"type":"text","text":" "},{"type":"text","text":"store scoped to the destination domain, and then further provide transformations for isolating the"},{"type":"text","text":" "},{"text":"case of the state enum to drive the navigation, as well as a transformation for embedding child","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actions back into the destination domain:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ ⚠️ Deprecated API",".sheet(","  store: store.scope(state: \\.$destination, action: { .destination($0) }),","  state: \\.editForm,","  action: { .editForm($0) }",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The navigation view modifiers that take "},{"code":"store","type":"codeVoice"},{"type":"text","text":", "},{"code":"state","type":"codeVoice"},{"type":"text","text":" and "},{"code":"action","type":"codeVoice"},{"text":" arguments are now deprecated,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and instead you can do it all with a single "},{"code":"store","type":"codeVoice"},{"type":"text","text":" argument:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ ✅ New API",".sheet(","  store: store.scope(","    state: \\.$destination.editForm, ","    action: \\.destination.editForm","  )",")"]},{"inlineContent":[{"type":"text","text":"All navigation APIs that take 3 arguments for the "},{"code":"store","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"state"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"action"},{"type":"text","text":" have been"},{"text":" ","type":"text"},{"inlineContent":[{"text":"soft-deprecated","type":"text"}],"type":"strong"},{"text":" and instead you should make use of the version of the APIs that take a single","type":"text"},{"text":" ","type":"text"},{"code":"store","type":"codeVoice"},{"text":" argument. This includes:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"alert(store:state:action:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"confirmationDialog(store:state:action:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fullScreenCover(store:state:action:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"navigationDestination(store:state:action)"}]}]},{"content":[{"inlineContent":[{"code":"popover(store:state:action:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"sheet(store:state:action:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":"."},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"text":".","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/migratingto1.5"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","title":"Migrating to 1.14","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" type is now officially "},{"code":"@MainActor","type":"codeVoice"},{"type":"text","text":" isolated."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.14","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference"},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" or non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" and state can further","type":"text"},{"type":"text","text":" "},{"text":"be extracted from the destination state, ","type":"text"},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":" it matches a particular case of an enum."}],"title":"init(_:state:action:then:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"IfContent"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"state"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","title":"dependency(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-9iai9":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-9iai9","kind":"symbol","abstract":[],"deprecated":true,"title":"scope(state:action:)","role":"symbol"},"#Enum-driven-navigation-APIs":{"type":"link","url":"#Enum-driven-navigation-APIs","title":"Enum-driven navigation APIs","titleInlineContent":[{"text":"Enum-driven navigation APIs","type":"text"}],"identifier":"#Enum-driven-navigation-APIs"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"url":"\/documentation\/composablearchitecture\/migratingto1.15","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"type":"text","text":" "},{"type":"text","text":"concurrency with no warnings or errors."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","title":"Migrating to 1.15"},"http://github.com/pointfreeco/swift-composable-architecture/discussions":{"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","title":"discussion","titleInlineContent":[{"text":"discussion","type":"text"}],"identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"url":"\/documentation\/composablearchitecture\/migratingto1.13","abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"text":"including minimal state observation, presentation and stack navigation.","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","title":"Migrating to 1.13"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","title":"Migrating to 1.7","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"type":"text","text":" "},{"type":"text","text":"APIs such as "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":", and more."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.7","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","title":"Migrating to 1.9","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"codeVoice"},{"type":"text","text":""},{"text":" ","type":"text"},{"text":"method on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true,"type":"reference"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},{"type":"text","text":" method for overriding dependencies."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.9","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","title":"Migrating to 1.4","abstract":[{"text":"Update your code to make use of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" macro, and learn how to better leverage case key","type":"text"},{"type":"text","text":" "},{"text":"paths in your features.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.4","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance#Store-scoping":{"type":"topic","url":"\/documentation\/composablearchitecture\/performance#Store-scoping","kind":"section","abstract":[],"title":"Store scoping","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","title":"Migrating to 1.12","url":"\/documentation\/composablearchitecture\/migratingto1.12","role":"article","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swift’s native Testing framework."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdentifiedAction"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","title":"IdentifiedAction","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","title":"Migration guides","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/migrationguides","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4#Identified-actions":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4#Identified-actions","kind":"section","abstract":[],"title":"Identified actions","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","title":"Migrating to 1.6","url":"\/documentation\/composablearchitecture\/migratingto1.6","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","type":"codeVoice"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"text":"assert on the payload inside an action received.","type":"text"}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","title":"Migrating to 1.8","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro, including automatic","type":"text"},{"type":"text","text":" "},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.8","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","title":"Migrating to 1.17.1","abstract":[{"text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable","type":"text"},{"type":"text","text":" "},{"text":"Architecture has been updated to extend support to this new version.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.17.1","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","kind":"symbol","title":"PresentationAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"topic","url":"\/documentation\/composablearchitecture\/withviewstore","deprecated":true,"role":"symbol","kind":"symbol","title":"WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"type":"topic","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"url":"\/documentation\/composablearchitecture\/presentationstate","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","title":"PresentationState","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","title":"Migrating to 1.17","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"type":"text","text":" "},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"type":"text","text":" "},{"type":"text","text":"backwards compatible change, but some new deprecations have been introduced."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.17","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"text":" protocol for a type.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"title":"Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","title":"Migrating to 1.11","url":"\/documentation\/composablearchitecture\/migratingto1.11","role":"article","abstract":[{"type":"text","text":"Update your code to use the new "},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" method for mutating shared state from asynchronous"},{"type":"text","text":" "},{"type":"text","text":"contexts, rather than mutating the underlying wrapped value directly."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","title":"Migrating to 1.10","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"code":"appStorage","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategies."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.10","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","title":"scope(state:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"url":"\/documentation\/composablearchitecture\/migratingto1.16","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".appStorage"},{"text":" strategy used with ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" now uses key-value observing instead of","type":"text"},{"type":"text","text":" "},{"code":"NotificationCenter","type":"codeVoice"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","title":"Migrating to 1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"type":"topic","url":"\/documentation\/composablearchitecture\/foreachstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true,"title":"ForEachStore","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"type":"text","text":" that simplifies working with"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"role":"symbol"},"#Scoping-performance":{"type":"link","url":"#Scoping-performance","title":"Scoping performance","titleInlineContent":[{"text":"Scoping performance","type":"text"}],"identifier":"#Scoping-performance"},"#Store-scoping-with-key-paths":{"type":"link","url":"#Store-scoping-with-key-paths","title":"Store scoping with key paths","titleInlineContent":[{"text":"Store scoping with key paths","type":"text"}],"identifier":"#Store-scoping-with-key-paths"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:else:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"reference","isActive":true},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" it matches a particular case of an enum."}],"title":"init(_:state:action:then:else:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"IfContent"},{"kind":"text","text":", "},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}