{"metadata":{"title":"Migrating to 1.4","roleHeading":"Article","role":"article","modules":[{"name":"ComposableArchitecture"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Update your code to make use of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro, and learn how to better leverage case key","type":"text"},{"text":" ","type":"text"},{"text":"paths in your features.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"The Composable Architecture is under constant development, and we are always looking for ways to"},{"type":"text","text":" "},{"type":"text","text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs"},{"text":" ","type":"text"},{"text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest","type":"text"},{"type":"text","text":" "},{"type":"text","text":"APIs, and this article contains some tips for doing so."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Using-the-Reducer-macro","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Using-case-key-paths","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Receiving-test-store-actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Moving-off-of-TaskResult"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#Identified-actions","type":"reference"}]}]}]},{"level":3,"anchor":"Using-the-Reducer-macro","text":"Using the @Reducer macro","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Version 1.4 of the library has introduced a new macro for automating certain aspects of implementing"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"type":"text","text":". It is called "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":", and to migrate existing code one only needs to annotate","type":"text"},{"type":"text","text":" "},{"text":"their type with ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"diff","code":["+@Reducer"," struct MyFeature: Reducer {","   \/\/ ..."," }"]},{"inlineContent":[{"text":"No other changes to be made, and you can immediately start taking advantage of new capabilities of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer composition, such as case key paths (see guides below). See the documentation of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" to see everything that macro adds to your feature’s reducer.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also technically drop the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"text":" conformance:","type":"text"}]},{"type":"codeListing","code":[" @Reducer","-struct MyFeature: Reducer {","+struct MyFeature {","   \/\/ ..."," }"],"syntax":"diff"},{"inlineContent":[{"type":"text","text":"However, there are some known issues in Xcode that cause autocomplete and type inference to break."},{"text":" ","type":"text"},{"text":"See the documentation of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Gotchas","isActive":true,"type":"reference"},{"type":"text","text":" for more gotchas on using the "},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" macro."}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Using-case-key-paths","text":"Using case key paths"},{"inlineContent":[{"type":"text","text":"In version 1.4 we soft-deprecated many APIs that take the "},{"code":"CasePath","type":"codeVoice"},{"text":" type in favor of APIs that take","type":"text"},{"type":"text","text":" "},{"type":"text","text":"what is known as a "},{"type":"codeVoice","code":"CaseKeyPath"},{"text":". Both of these types come from our ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"library and aim to allow one to abstract over the shape of enums just as key paths allow one to do"},{"type":"text","text":" "},{"type":"text","text":"so with structs."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, in conjunction with version 1.4 of this library we also released an update to CasePaths"},{"text":" ","type":"text"},{"type":"text","text":"that massively improved the ergonomics of using case paths. We introduced the "},{"type":"codeVoice","code":"@CasePathable"},{"text":" macro","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for automatically deriving case paths so that we could stop using runtime reflection, and we"},{"type":"text","text":" "},{"text":"introduced a way of using key paths to describe case paths. And so the old ","type":"text"},{"code":"CasePath","type":"codeVoice"},{"text":" type has been","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deprecated, and the new "},{"code":"CaseKeyPath","type":"codeVoice"},{"type":"text","text":" type has taken its place."}]},{"inlineContent":[{"text":"This means that previously when you would use APIs involving case paths you would have to use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\/"},{"type":"text","text":" prefix operator to derive the case path. For example:"}],"type":"paragraph"},{"syntax":"swift","code":["Reduce { state, action in ","  \/\/ ...","}",".ifLet(\\.child, action: \/Action.child) {","  ChildFeature()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You now get to shorten that into a far simpler, more familiar key path syntax:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Reduce { state, action in ","  \/\/ ...","}",".ifLet(\\.child, action: \\.child) {","  ChildFeature()","}"]},{"inlineContent":[{"text":"To be able to take advantage of this syntax with your feature’s actions, you must annotate your","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"type":"text","text":" conformances with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro:"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct Feature {","  \/\/ ...","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Which automatically applies the "},{"code":"@CasePathable","type":"codeVoice"},{"text":" macro to the feature’s ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum among other"},{"text":" ","type":"text"},{"text":"things:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":["+@CasePathable"," enum Action {","   \/\/ ..."," }"]},{"inlineContent":[{"type":"text","text":"Further, if the feature’s "},{"code":"State","type":"codeVoice"},{"text":" is an enum, ","type":"text"},{"code":"@CasePathable","type":"codeVoice"},{"text":" will also be applied, along with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@dynamicMemberLookup"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":["+@CasePathable","+@dynamicMemberLookup"," enum State {","   \/\/ ..."," }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dynamic member lookups allows a state’s associated value to be accessed via dot-syntax, which can be"},{"type":"text","text":" "},{"text":"useful when scoping a store’s state to a specific case:","type":"text"}]},{"type":"codeListing","syntax":"diff","code":[" IfLetStore(","   store.scope(","-    state: \/Feature.State.tray, action: Feature.Action.tray","+    state: \\.tray, action: { .tray($0) }","   )",") { store in","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"text":"To form a case key path for any other enum, you must apply the ","type":"text"},{"type":"codeVoice","code":"@CasePathable"},{"text":" macro explicitly:","type":"text"}]},{"code":["@CasePathable","enum DelegateAction {","  case didFinish(success: Bool)","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"And to access its associated values, you must also apply the ","type":"text"},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"type":"text","text":" attributes:"}]},{"syntax":"swift","code":["@CasePathable","@dynamicMemberLookup","enum DestinationState {","  case tray(Tray.State)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Anywhere you previously used the ","type":"text"},{"type":"codeVoice","code":"\/"},{"type":"text","text":" prefix operator for case paths you should now be able to use"},{"type":"text","text":" "},{"type":"text","text":"key path syntax, so long as all of the enums involved are "},{"code":"@CasePathable","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"If you encounter any problems, create a ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"reference","isActive":true},{"type":"text","text":" on the Composable Architecture"},{"type":"text","text":" "},{"text":"repo.","type":"text"}]},{"type":"heading","level":3,"anchor":"Receiving-test-store-actions","text":"Receiving test store actions"},{"inlineContent":[{"text":"The power of case key paths and the ","type":"text"},{"type":"codeVoice","code":"@CasePathable"},{"type":"text","text":" macro has made it possible to massively simplify"},{"text":" ","type":"text"},{"type":"text","text":"how one asserts on actions received in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":". Instead of constructing the concrete action"},{"text":" ","type":"text"},{"text":"received from an effect like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["store.receive(.child(.presented(.response(.success(\"Hello!\")))))"]},{"inlineContent":[{"type":"text","text":"…you can use key path syntax to describe the nesting of action cases that is received:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["store.receive(\\.child.presented.response.success)"]},{"name":"Note","content":[{"inlineContent":[{"text":"Case key path syntax requires that every nested action is ","type":"text"},{"code":"@CasePathable","type":"codeVoice"},{"type":"text","text":". Reducer actions"},{"type":"text","text":" "},{"type":"text","text":"are typically "},{"code":"@CasePathable","type":"codeVoice"},{"type":"text","text":" automatically via the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"text":" macro, but other enums must be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"explicitly annotated:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@CasePathable","enum DelegateAction {","  case didFinish(success: Bool)","}"]}],"style":"note","type":"aside"},{"type":"paragraph","inlineContent":[{"text":"And in the case of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"type":"text","text":" you can even omit the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)"},{"type":"text","text":" "},{"text":"path component:","type":"text"}]},{"syntax":"swift","code":["store.receive(\\.child.response.success)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This does not assert on the "},{"type":"emphasis","inlineContent":[{"text":"data","type":"text"}]},{"type":"text","text":" received in the action, but typically that is already covered"},{"text":" ","type":"text"},{"type":"text","text":"by the state assertion made inside the trailing closure of "},{"code":"receive","type":"codeVoice"},{"type":"text","text":". And if you use this style of"},{"type":"text","text":" "},{"type":"text","text":"action receiving exclusively, you can even stop conforming your action types to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"There are a few advanced situations to be aware of. When receiving an action that involves an","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"type":"text","text":" (more information below in "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions","isActive":true,"type":"reference"},{"type":"text","text":"), then"},{"type":"text","text":" "},{"text":"you can use the subscript ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/AllCasePaths-swift.struct\/subscript(id:)","isActive":true},{"type":"text","text":" to"},{"text":" ","type":"text"},{"text":"receive a particular action for an element:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["store.receive(\\.rows[id: 0].response.success)"],"type":"codeListing"},{"inlineContent":[{"text":"And the same goes for ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"text":" too:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["store.receive(\\.path[id: 0].response.success)"],"syntax":"swift"},{"type":"heading","level":3,"text":"Moving off of TaskResult","anchor":"Moving-off-of-TaskResult"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In version 1.4 of the library, the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","isActive":true,"type":"reference"},{"type":"text","text":" was soft-deprecated and eventually will be fully"},{"type":"text","text":" "},{"text":"deprecated and then removed. The original rationale for the introduction of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},{"type":"text","text":" was to"},{"type":"text","text":" "},{"type":"text","text":"make an equatable-friendly version of "},{"type":"codeVoice","code":"Result"},{"text":" for when the error produced was ","type":"text"},{"type":"codeVoice","code":"any Error"},{"type":"text","text":", which is"},{"type":"text","text":" "},{"text":"not equatable. And the reason to want an equatable-friendly result is so that the ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" type in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducers can be equatable, and the reason for "},{"inlineContent":[{"type":"text","text":"that"}],"type":"emphasis"},{"type":"text","text":" is to make it possible to test actions"},{"text":" ","type":"text"},{"text":"emitted by effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Typically in tests, when one wants to assert that the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" received an action you must"},{"type":"text","text":" "},{"type":"text","text":"specify a concrete action:"}]},{"type":"codeListing","syntax":"swift","code":["store.receive(.response(.success(\"Hello!\"))) {","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"text":" uses the equatable conformance of ","type":"text"},{"code":"Action","type":"codeVoice"},{"type":"text","text":" to confirm that you are asserting that"},{"text":" ","type":"text"},{"type":"text","text":"the store received the correct action."}]},{"type":"paragraph","inlineContent":[{"text":"However, this becomes verbose when testing deeply nested features, which is common in integration","type":"text"},{"type":"text","text":" "},{"text":"tests:","type":"text"}]},{"code":["store.receive(.child(.response(.success(\"Hello!\")))) {","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"However, with the introduction of ","type":"text"},{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"case key paths"}],"identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","overridingTitle":"case key paths"},{"type":"text","text":" we greatly improved the"},{"type":"text","text":" "},{"text":"ergonomics of referring to deeply nested enums. You can now use key path syntax to describe the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"case of the enum you expect to receive, and you can even omit the associated data from the action"},{"type":"text","text":" "},{"type":"text","text":"since typically that is covered in the state assertion:"}]},{"type":"codeListing","syntax":"swift","code":["store.receive(\\.child.response.success) {","  \/\/ ...","}"]},{"inlineContent":[{"type":"text","text":"And this syntax does not require the "},{"type":"codeVoice","code":"Action"},{"text":" enum to be equatable since we are only asserting that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the case of the action was received. We are not testing the data in the action."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We feel that with this better syntax there is less of a reason to have "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","isActive":true,"type":"reference"},{"text":" and so we","type":"text"},{"type":"text","text":" "},{"type":"text","text":"do plan on removing it eventually. If you have an important use case for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},{"type":"text","text":" that you"},{"type":"text","text":" "},{"text":"think merits it being in the library, please ","type":"text"},{"type":"reference","overridingTitle":"open a discussion","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","overridingTitleInlineContent":[{"text":"open a discussion","type":"text"}]},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Identified actions","anchor":"Identified-actions"},{"inlineContent":[{"type":"text","text":"In version 1.4 of the library we introduced the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"text":" type which makes it more","type":"text"},{"text":" ","type":"text"},{"text":"ergonomic to bundle the data needed for actions in collections of data. Previously you would","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have a case in your "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum for a particular row that holds the ID of the state being acted"},{"type":"text","text":" "},{"type":"text","text":"upon as well as the action:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["enum Action {","  \/\/ ...","  case row(id: State.ID, action: Action)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be updated to hold onto "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"text":" instead of those piece of data directly in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"case:"}]},{"code":["enum Action {","  \/\/ ...","  case rows(IdentifiedActionOf<Nested>)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"And in the reducer, instead of invoking"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8"},{"text":" with a case path using the","type":"text"},{"type":"text","text":" "},{"code":"\/","type":"codeVoice"},{"text":" prefix operator:","type":"text"}],"type":"paragraph"},{"code":["Reduce { state, action in ","  \/\/ ...","}",".forEach(\\.rows, action: \/Action.row(id:action:)) {","  RowFeature()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"…you will instead use key path syntax to determine which case of the ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum holds the"},{"type":"text","text":" "},{"type":"text","text":"identified action:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Reduce { state, action in ","  \/\/ ...","}",".forEach(\\.rows, action: \\.rows) {","  RowFeature()","}"]},{"inlineContent":[{"type":"text","text":"This syntax is shorter, more familiar, and can better leverage Xcode autocomplete and"},{"text":" ","type":"text"},{"type":"text","text":"type-inference."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"One last change you will need to make is anywhere you are destructuring the old-style action you"},{"text":" ","type":"text"},{"type":"text","text":"will need to insert a "},{"type":"codeVoice","code":".element"},{"type":"text","text":" layer:"}],"type":"paragraph"},{"code":["-case let .row(id: id, action: .buttonTapped):","+case let .rows(.element(id: id, action: .buttonTapped)):"],"type":"codeListing","syntax":"diff"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.4"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"type":"topic","url":"\/documentation\/composablearchitecture\/foreachstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true,"title":"ForEachStore","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"type":"text","text":" that simplifies working with"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","title":"Migrating to 1.6","url":"\/documentation\/composablearchitecture\/migratingto1.6","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","type":"codeVoice"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"text":"assert on the payload inside an action received.","type":"text"}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdentifiedAction"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","title":"IdentifiedAction","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"text":" protocol for a type.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"title":"Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"url":"\/documentation\/composablearchitecture\/taskresult","deprecated":true,"type":"topic","title":"TaskResult","abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swift’s "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" "},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"text":" ","type":"text"},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskResult"}],"navigatorTitle":[{"text":"TaskResult","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"url":"\/documentation\/composablearchitecture\/migratingto1.15","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"type":"text","text":" "},{"type":"text","text":"concurrency with no warnings or errors."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","title":"Migrating to 1.15"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","title":"dependency(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:filePath:line:column:)-6zye8":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElementAction"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ID"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"IdentifiedAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"element"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">\n","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:filepath:line:column:)-6zye8","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent"},{"type":"text","text":" "},{"text":"state.","type":"text"}],"title":"forEach(_:action:element:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","type":"topic","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/AllCasePaths-swift.struct/subscript(id:)":{"role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","kind":"typeIdentifier","text":"AnyCasePath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/AllCasePaths-swift.struct\/subscript(id:)","title":"subscript(id:)","url":"\/documentation\/composablearchitecture\/identifiedaction\/allcasepaths-swift.struct\/subscript(id:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","title":"Migrating to 1.12","url":"\/documentation\/composablearchitecture\/migratingto1.12","role":"article","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swift’s native Testing framework."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","title":"Migrating to 1.11","url":"\/documentation\/composablearchitecture\/migratingto1.11","role":"article","abstract":[{"type":"text","text":"Update your code to use the new "},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" method for mutating shared state from asynchronous"},{"type":"text","text":" "},{"type":"text","text":"contexts, rather than mutating the underlying wrapped value directly."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","title":"Migrating to 1.9","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"codeVoice"},{"type":"text","text":""},{"text":" ","type":"text"},{"text":"method on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true,"type":"reference"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},{"type":"text","text":" method for overriding dependencies."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.9","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"topic","url":"\/documentation\/composablearchitecture\/withviewstore","deprecated":true,"role":"symbol","kind":"symbol","title":"WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}]},"#Receiving-test-store-actions":{"titleInlineContent":[{"text":"Receiving test store actions","type":"text"}],"title":"Receiving test store actions","type":"link","identifier":"#Receiving-test-store-actions","url":"#Receiving-test-store-actions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"StackAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","title":"StackAction","navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/stackaction","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","title":"Migrating to 1.8","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro, including automatic","type":"text"},{"type":"text","text":" "},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.8","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","title":"Migrating to 1.17.1","abstract":[{"text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable","type":"text"},{"type":"text","text":" "},{"text":"Architecture has been updated to extend support to this new version.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.17.1","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"#Using-case-key-paths":{"titleInlineContent":[{"text":"Using case key paths","type":"text"}],"title":"Using case key paths","type":"link","identifier":"#Using-case-key-paths","url":"#Using-case-key-paths"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","title":"Migrating to 1.17","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"type":"text","text":" "},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"type":"text","text":" "},{"type":"text","text":"backwards compatible change, but some new deprecations have been introduced."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.17","type":"topic"},"#Identified-actions":{"titleInlineContent":[{"text":"Identified actions","type":"text"}],"title":"Identified actions","type":"link","identifier":"#Identified-actions","url":"#Identified-actions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Gotchas":{"abstract":[],"kind":"section","title":"Gotchas","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Gotchas","url":"\/documentation\/composablearchitecture\/reducer#Gotchas"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"type":"topic","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","kind":"symbol","title":"PresentationAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","title":"Migrating to 1.14","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" type is now officially "},{"code":"@MainActor","type":"codeVoice"},{"type":"text","text":" isolated."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.14","type":"topic"},"http://github.com/pointfreeco/swift-case-paths":{"titleInlineContent":[{"text":"CasePaths","type":"text"}],"title":"CasePaths","type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","url":"http:\/\/github.com\/pointfreeco\/swift-case-paths"},"http://github.com/pointfreeco/swift-composable-architecture/discussions":{"titleInlineContent":[{"text":"discussion","type":"text"}],"title":"discussion","type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","url":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","title":"Migrating to 1.7","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"type":"text","text":" "},{"type":"text","text":"APIs such as "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":", and more."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.7","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","title":"Migrating to 1.10","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"code":"appStorage","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategies."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.10","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"url":"\/documentation\/composablearchitecture\/migratingto1.16","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".appStorage"},{"text":" strategy used with ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" now uses key-value observing instead of","type":"text"},{"type":"text","text":" "},{"code":"NotificationCenter","type":"codeVoice"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","title":"Migrating to 1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4#Identified-actions":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4#Identified-actions","kind":"section","abstract":[],"title":"Identified actions","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","title":"Migrating to 1.5","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"type":"text","text":" operation on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.5","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/presented(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","abstract":[{"text":"An action sent to the associated, non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" presentation state."}],"url":"\/documentation\/composablearchitecture\/presentationaction\/presented(_:)","kind":"symbol","title":"PresentationAction.presented(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"presented"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"#Moving-off-of-TaskResult":{"titleInlineContent":[{"text":"Moving off of ","type":"text"},{"code":"TaskResult","type":"codeVoice"}],"title":"Moving off of TaskResult","type":"link","identifier":"#Moving-off-of-TaskResult","url":"#Moving-off-of-TaskResult"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","title":"Migration guides","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/migrationguides","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"url":"\/documentation\/composablearchitecture\/migratingto1.13","abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"text":"including minimal state observation, presentation and stack navigation.","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","title":"Migrating to 1.13"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","deprecated":true,"type":"topic"},"#Using-the-Reducer-macro":{"titleInlineContent":[{"text":"Using the @Reducer macro","type":"text"}],"type":"link","title":"Using the @Reducer macro","identifier":"#Using-the-Reducer-macro","url":"#Using-the-Reducer-macro"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","title":"scope(state:action:)"}}}