{"abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference","isActive":true},{"text":"s.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"View actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"],"anchor":"View-actions"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewaction(for:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(extension, conformances: "},{"text":"ViewActionSending","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","preciseIdentifier":"s:22ComposableArchitecture17ViewActionSendingP"},{"kind":"text","text":") "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":".Type) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10ViewActionP","text":"ViewAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"If you want to restrict what actions can be sent from the view you can use this macro along with the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference","isActive":true},{"text":" protocol. You start by conforming your reducer’s ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum to the"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":" protocol, and moving view-specific actions to its own inner enum:"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct Feature {","  struct State { \/* ... *\/ }","  enum Action: ViewAction {","    case loginResponse(Bool)","    case view(View)","","    enum View {","      case loginButtonTapped","    }","  }","  \/\/ ...","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can apply the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","type":"reference","isActive":true},{"text":" macro to your view by specifying the type of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reducer that powers the view:"}]},{"type":"codeListing","syntax":"swift","code":["@ViewAction(for: Feature.self)","struct FeatureView: View {","  let store: StoreOf<Feature>","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The macro does two things:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It adds a "},{"type":"codeVoice","code":"send"},{"type":"text","text":" method to the view that you can use instead of "},{"type":"codeVoice","code":"store.send"},{"text":". This allows you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to send view actions more simply, without wrapping the action in "},{"type":"codeVoice","code":".view(…)"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":[" Button(\"Login\") {","-  store.send(.view(.loginButtonTapped))","+  send(.loginButtonTapped)"," }"],"syntax":"diff"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It creates warning diagnostics if you try sending actions through "},{"type":"codeVoice","code":"store.send"},{"text":" rather than","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"type":"codeVoice","code":"send"},{"text":" method on the view:","type":"text"}]},{"code":["Button(\"Login\") {","  store.send(.view(.loginButtonTapped))","\/\/┬─────────","\/\/╰─ ⚠️ Do not use 'store.send' directly when using '@ViewAction'","}"],"type":"codeListing","syntax":"swift"}]}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"roleHeading":"Macro","symbolKind":"macro","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":".Type)"}],"externalID":"s:22ComposableArchitecture10ViewAction3foryxm_tcAA7ReducerRzAaB0D0Rpzlufm","title":"ViewAction(for:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"type":"text","text":" of the reducer to change"},{"text":" ","type":"text"},{"type":"text","text":"and\/or kick off a side "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":" that can communicate with the outside world.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/action","title":"Action","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/state","role":"symbol","kind":"symbol","title":"State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction":{"url":"\/documentation\/composablearchitecture\/viewaction","abstract":[{"text":"Defines the actions that can be sent from a view.","type":"text"}],"title":"ViewAction","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"}],"navigatorTitle":[{"text":"ViewAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction(for:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":"s."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","url":"\/documentation\/composablearchitecture\/viewaction(for:)","title":"ViewAction(for:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewActionSending":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewActionSending"}],"abstract":[{"text":"A type that represents a view with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" that can send "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"text":"s.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewActionSending","kind":"identifier"}],"title":"ViewActionSending","url":"\/documentation\/composablearchitecture\/viewactionsending","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect"}}}