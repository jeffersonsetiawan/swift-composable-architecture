{"metadata":{"extendedModule":"SwiftUICore","platforms":[{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0","name":"iOS"},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"macOS","beta":false},{"deprecated":false,"unavailable":false,"name":"tvOS","introducedAt":"16.0","beta":false},{"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"9.0","beta":false}],"externalID":"s:7SwiftUI4ViewPAAE10fontWeightyQrAA4FontV0E0VSgF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fontWeight","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI4FontV","text":"Font","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Weight","preciseIdentifier":"s:7SwiftUI4FontV6WeightV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"fontWeight(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fontWeight"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"weight"},{"text":": ","kind":"text"},{"text":"Font","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV"},{"text":".","kind":"text"},{"text":"Weight","preciseIdentifier":"s:7SwiftUI4FontV6WeightV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.fontWeight(_:)"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/fontweight(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontWeight(_:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"View Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/fontWeight(_:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/fontweight(_:)","title":"fontWeight(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fontWeight","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4FontV","kind":"typeIdentifier","text":"Font"},{"kind":"text","text":"."},{"text":"Weight","preciseIdentifier":"s:7SwiftUI4FontV6WeightV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontWeight(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","deprecated":true,"type":"topic"}}}