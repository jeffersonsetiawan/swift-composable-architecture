{"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.scrollPosition(_:anchor:)"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollPosition(_:anchor:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollPosition"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"position"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ScrollPosition","preciseIdentifier":"s:7SwiftUI14ScrollPositionV"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9UnitPointV","text":"UnitPoint","kind":"typeIdentifier"},{"kind":"text","text":"? = nil) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/scrollposition(_:anchor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE14scrollPosition_6anchorQrAA7BindingVyAA06ScrollE0VG_AA9UnitPointVSgtF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollPosition"},{"text":"(","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"text":"ScrollPosition","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14ScrollPositionV"},{"text":">, ","kind":"text"},{"text":"anchor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV","text":"UnitPoint"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUICore","platforms":[{"beta":false,"introducedAt":"18.0","name":"iOS","deprecated":false,"unavailable":false},{"beta":false,"deprecated":false,"introducedAt":"15.0","name":"macOS","unavailable":false},{"introducedAt":"18.0","deprecated":false,"unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"2.0","unavailable":false,"beta":false,"name":"visionOS","deprecated":false},{"beta":false,"introducedAt":"11.0","name":"watchOS","deprecated":false,"unavailable":false}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"scrollPosition(_:anchor:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/scrollPosition(_:anchor:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollPosition"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7SwiftUI14ScrollPositionV","text":"ScrollPosition","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"anchor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollPosition(_:anchor:)","url":"\/documentation\/composablearchitecture\/ifletstore\/scrollposition(_:anchor:)","title":"scrollPosition(_:anchor:)","type":"topic","role":"symbol","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"View Implementations","kind":"article"}}}