{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"valueToAction"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A function to get the state for the binding from the view store’s full state.","type":"text"}]}],"name":"get"},{"name":"valueToAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that transforms the binding’s value into an action that can be"},{"text":" ","type":"text"},{"type":"text","text":"sent to the store."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method is useful for dealing with SwiftUI components that work with two-way "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s"},{"text":" ","type":"text"},{"type":"text","text":"since the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" does not allow directly writing its state; it only allows reading state"},{"text":" ","type":"text"},{"text":"and sending actions.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, a text field binding can be created like this:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct State { var name = \"\" }","enum Action { case nameChanged(String) }","","TextField(","  \"Enter name\",","  text: viewStore.binding(","    get: { $0.name },","    send: { Action.nameChanged($0) }","  )",")"]}],"kind":"content"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","interfaceLanguage":"swift"},"metadata":{"externalID":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF","platforms":[],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"title":"binding(get:send:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"role":"symbol"},"abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"],"anchor":"Overloads","title":"Overloads"}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-l66r":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"get","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"text":": ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"binding(get:send:)","type":"topic","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"text":"actions to the store.","type":"text"}],"role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-l66r","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-705m7":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-705m7","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actions to the store."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"binding","kind":"identifier"},{"kind":"text","text":"("},{"text":"send","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"binding(send:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","kind":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"title":"binding(get:send:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true,"title":"ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-7nwak":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-7nwak","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":">","kind":"text"}],"title":"binding(send:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak"}}}