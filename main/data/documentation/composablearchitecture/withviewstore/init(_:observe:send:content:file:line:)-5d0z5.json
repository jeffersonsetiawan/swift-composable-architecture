{"metadata":{"externalID":"s:22ComposableArchitecture13WithViewStoreVAASQRzrlE_7observe4send7content4file4lineACyxq_q0_GAA0E0Cyqd__qd_0_G_xqd__cqd_0_q_cq0_AA0dE0Cyxq_Gcs12StaticStringVSutcr0_lufc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"content","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"title":"init(_:observe:send:content:file:line:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","extendedModule":"ComposableArchitecture","roleHeading":"Initializer","symbolKind":"init"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"store"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toViewState","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"text":" ","kind":"text"},{"text":"fromViewAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder","kind":"attribute"},{"kind":"text","text":" "},{"text":"content","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC","text":"ViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"name":"store","content":[{"inlineContent":[{"type":"text","text":"A store."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that transforms store state into observable view state. All"},{"type":"text","text":" "},{"type":"text","text":"changes to the view state will cause the "},{"type":"codeVoice","code":"WithViewStore"},{"text":" to re-compute its view.","type":"text"}]}],"name":"toViewState"},{"name":"fromViewAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that transforms view actions into store action."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that can generate content from a view store."}]}],"name":"content"},{"content":[{"inlineContent":[{"type":"text","text":"The file."}],"type":"paragraph"}],"name":"file"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line."}]}],"name":"line"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"text":" will re-compute its body for ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" change to the state it holds. Often the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" that we want to observe holds onto a lot more state than is necessary to render a"},{"text":" ","type":"text"},{"text":"view. It may hold onto the state of child features, or internal state for its logic.","type":"text"}]},{"inlineContent":[{"type":"text","text":"It can be important to transform the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":"â€™s state into something smaller for observation."},{"type":"text","text":" "},{"text":"This will help minimize the number of times your view re-computes its body, and can even avoid","type":"text"},{"type":"text","text":" "},{"text":"certain SwiftUI bugs that happen due to over-rendering.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The way to do this is to use the ","type":"text"},{"type":"codeVoice","code":"observe"},{"type":"text","text":" argument of this initializer. It allows you to"},{"type":"text","text":" "},{"type":"text","text":"turn the full state into a smaller data type, and only changes to that data type will trigger"},{"text":" ","type":"text"},{"text":"a body re-computation.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if your application uses a tab view, then the root state may hold the state"},{"type":"text","text":" "},{"text":"for each tab as well as the currently selected tab:","type":"text"}]},{"type":"codeListing","code":["@Reducer","struct AppFeature {","  enum Tab { case activity, search, profile }","  struct State {","    var activity: Activity.State","    var search: Search.State","    var profile: Profile.State","    var selectedTab: Tab","  }","  \/\/ ...","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In order to construct a tab view you need to observe this state because changes to","type":"text"},{"type":"text","text":" "},{"code":"selectedTab","type":"codeVoice"},{"type":"text","text":" need to make SwiftUI update the visual state of the UI. However, you do not"},{"text":" ","type":"text"},{"type":"text","text":"need to observe changes to "},{"type":"codeVoice","code":"activity"},{"text":", ","type":"text"},{"type":"codeVoice","code":"search"},{"type":"text","text":" and "},{"code":"profile","type":"codeVoice"},{"type":"text","text":". Those are only necessary for"},{"type":"text","text":" "},{"type":"text","text":"those child features, and changes to that state should not cause our tab view to re-compute"},{"type":"text","text":" "},{"type":"text","text":"itself."}]},{"code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    WithViewStore(self.store, observe: \\.selectedTab) { viewStore in","      TabView(selection: viewStore.binding(send: { .tabSelected($0) }) {","        ActivityView(","          store: self.store.scope(state: \\.activity, action: \\.activity)","        )","        .tag(AppFeature.Tab.activity)","        SearchView(","          store: self.store.scope(state: \\.search, action: \\.search)","        )","        .tag(AppFeature.Tab.search)","        ProfileView(","          store: self.store.scope(state: \\.profile, action: \\.profile)","        )","        .tag(AppFeature.Tab.profile)","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To read more about this performance technique, read the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","isActive":true,"type":"reference"},{"type":"text","text":" article."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:send:content:file:line:)-5d0z5"},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:removeDuplicates:content:file:line:)-7y5bp","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:send:removeDuplicates:content:file:line:)-dheh"],"title":"Overloads","generated":true,"anchor":"Overloads"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/withviewstore\/init(_:observe:send:content:file:line:)-5d0z5"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:content:file:line:)-8g15l"]]},"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into an observable "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" in order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to compute views from state."}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/init(_:observe:send:removeDuplicates:content:file:line:)-dheh":{"url":"\/documentation\/composablearchitecture\/withviewstore\/init(_:observe:send:removeduplicates:content:file:line:)-dheh","kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" into an observable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" in order"},{"text":" ","type":"text"},{"type":"text","text":"to compute views from state."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:send:removeDuplicates:content:file:line:)-dheh","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"text":"ViewStore","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"deprecated":true,"title":"init(_:observe:send:removeDuplicates:content:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/init(_:observe:send:content:file:line:)-5d0z5":{"url":"\/documentation\/composablearchitecture\/withviewstore\/init(_:observe:send:content:file:line:)-5d0z5","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into an observable ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference","isActive":true},{"type":"text","text":" in order"},{"type":"text","text":" "},{"type":"text","text":"to compute views from state."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:send:content:file:line:)-5d0z5","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewStore","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"title":"init(_:observe:send:content:file:line:)","conformance":{"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true,"title":"ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/init(_:observe:content:file:line:)-8g15l":{"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" into an observable "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"text":" in order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to compute views from state."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/withviewstore\/init(_:observe:content:file:line:)-8g15l","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"content","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC","text":"ViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"title":"init(_:observe:content:file:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:content:file:line:)-8g15l","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"kind":"article","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","title":"Performance","type":"topic","url":"\/documentation\/composablearchitecture\/performance","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/init(_:observe:removeDuplicates:content:file:line:)-7y5bp":{"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" into an observable "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"text":"to compute views from state.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/withviewstore\/init(_:observe:removeduplicates:content:file:line:)-7y5bp","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"content","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC","text":"ViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"deprecated":true,"title":"init(_:observe:removeDuplicates:content:file:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/init(_:observe:removeDuplicates:content:file:line:)-7y5bp","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"topic","url":"\/documentation\/composablearchitecture\/withviewstore","deprecated":true,"role":"symbol","kind":"symbol","title":"WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}]}}}