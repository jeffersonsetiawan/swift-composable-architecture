{"metadata":{"extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture9TestStoreC4send__6assert6fileID0G04line6columnAA0cD4TaskVs7KeyPathCy9CasePaths0N0Vyq_GAPyqd__GG_qd__yxzKcSgs12StaticStringVAVS2utYalF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","text":"TestStoreTask"}],"title":"send(_:_:assert:fileID:file:line:column:)"},"abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":" "},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil, "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#fileID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#filePath"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#column"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","text":"TestStoreTask","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"action","content":[{"inlineContent":[{"type":"text","text":"A case key path to an action."}],"type":"paragraph"}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to embed in "},{"code":"action","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"updateStateToExpectedResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that asserts state changed by sending the action to"},{"text":" ","type":"text"},{"text":"the store. The mutable state sent to this closure must be modified to match the state of","type":"text"},{"text":" ","type":"text"},{"text":"the store after processing the given action. Do not provide a closure if no change is","type":"text"},{"text":" ","type":"text"},{"text":"expected.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fileID."}]}],"name":"fileID"},{"name":"filePath","content":[{"inlineContent":[{"type":"text","text":"The filePath."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The line."}],"type":"paragraph"}],"name":"line"},{"content":[{"inlineContent":[{"text":"The column.","type":"text"}],"type":"paragraph"}],"name":"column"}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","type":"reference"},{"type":"text","text":" that represents the lifecycle of the effect executed when"},{"text":" ","type":"text"},{"text":"sending the action.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"type":"codeVoice","code":"send(_:assert:fileID:file:line:column:)-8f2pl"},{"type":"text","text":", except it allows"},{"type":"text","text":" "},{"type":"text","text":"you to specify a value for the associated value of the action."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be useful when sending nested action.  For example:"}]},{"type":"codeListing","syntax":"swift","code":["await store.send(.destination(.presented(.child(.emailChanged(\"blob@pointfree.co\")))))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"â€¦can be simplified to:"}]},{"syntax":"swift","type":"codeListing","code":["await store.send(\\.destination.child.emailChanged, \"blob@pointfree.co\")"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/send(_:_:assert:fileid:file:line:column:)"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:fileID:file:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:fileID:file:line:column:)-klnc","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/isDismissed","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"],"generated":true,"title":"Testing a reducer","anchor":"Testing-a-reducer"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:_:assert:fileID:file:line:column:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/composablearchitecture\/teststore\/send(_:_:assert:fileid:file:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","role":"symbol","type":"topic","title":"send(_:_:assert:fileID:file:line:column:)","abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"abstract":[{"text":"The type returned from ","type":"text"},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl"},{"text":" that represents the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"lifecycle of the effect started from sending an action."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","title":"TestStoreTask","role":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask","navigatorTitle":[{"text":"TestStoreTask","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/assert(_:fileID:file:line:column:)":{"abstract":[{"type":"text","text":"Assert against the current state of the store."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assert","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:fileID:file:line:column:)","title":"assert(_:fileID:file:line:column:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/composablearchitecture\/teststore\/assert(_:fileid:file:line:column:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/isDismissed":{"url":"\/documentation\/composablearchitecture\/teststore\/isdismissed","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/isDismissed","role":"symbol","type":"topic","title":"isDismissed","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the storeâ€™s feature has been dismissed."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDismissed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"type":"topic","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/finish(timeout:fileID:file:line:column:)-klnc":{"abstract":[{"type":"text","text":"Suspends until all in-flight effects have finished, or until it times out."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:fileID:file:line:column:)-klnc","title":"finish(timeout:fileID:file:line:column:)","role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/finish(timeout:fileid:file:line:column:)-klnc","kind":"symbol"}}}