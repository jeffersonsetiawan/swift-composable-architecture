{"abstract":[{"text":"Assert against the current state of the store.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/assert(_:fileid:file:line:column:)"]}],"metadata":{"extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assert","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:22ComposableArchitecture9TestStoreC6assert_6fileID0F04line6columnyyxzKc_s12StaticStringVAJS2utF","title":"assert(_:fileID:file:line:column:)"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:fileID:file:line:column:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"kind":"symbol","seeAlsoSections":[{"generated":true,"title":"Testing a reducer","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:fileID:file:line:column:)-klnc","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/isDismissed","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"],"anchor":"Testing-a-reducer"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assert","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"updateStateToExpectedResult"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#fileID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filePath"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that asserts against the current state of the test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"store."}],"type":"paragraph"}],"name":"updateStateToExpectedResult"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fileID.","type":"text"}]}],"name":"fileID"},{"name":"filePath","content":[{"inlineContent":[{"text":"The filePath.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line."}]}],"name":"line"},{"name":"column","content":[{"inlineContent":[{"type":"text","text":"The column."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The trailing closure provided is given a mutable argument that represents the current state,"},{"type":"text","text":" "},{"type":"text","text":"and you can provide any mutations you want to the state. If your mutations cause the argument"},{"type":"text","text":" "},{"text":"to differ from the current state of the test store, a test failure will be triggered.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This tool is most useful in non-exhaustive test stores (see"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA#Non-exhaustive-testing","isActive":true},{"text":"), which allow you to assert on a subset of the things","type":"text"},{"type":"text","text":" "},{"type":"text","text":"happening inside your features. For example, you can send an action in a child feature"},{"type":"text","text":" "},{"type":"text","text":"without asserting on how many changes in the system, and then tell the test store to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:fileID:file:line:column:)-klnc","isActive":true},{"type":"text","text":" by executing all of its effects, and finally"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipReceivedActions(strict:fileID:file:line:column:)"},{"text":" to receive all actions. After that","type":"text"},{"text":" ","type":"text"},{"text":"is done you can assert on the final state of the store:","type":"text"}],"type":"paragraph"},{"code":["store.exhaustivity = .off","await store.send(\\.child.closeButtonTapped)","await store.finish()","await store.skipReceivedActions()","store.assert {","  $0.child = nil","}"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":"This helper is only intended to be used with non-exhaustive test stores. It is not"},{"text":" ","type":"text"},{"text":"needed in exhaustive test stores since any assertion you may make inside the trailing closure","type":"text"},{"type":"text","text":" "},{"type":"text","text":"has already been handled by a previous "},{"type":"codeVoice","code":"send"},{"type":"text","text":" or "},{"type":"codeVoice","code":"receive"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA#Non-exhaustive-testing":{"kind":"section","url":"\/documentation\/composablearchitecture\/testingtca#Non-exhaustive-testing","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA#Non-exhaustive-testing","title":"Non-exhaustive testing","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"abstract":[{"text":"The type returned from ","type":"text"},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl"},{"text":" that represents the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"lifecycle of the effect started from sending an action."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","title":"TestStoreTask","role":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask","navigatorTitle":[{"text":"TestStoreTask","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"type":"topic","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/isDismissed":{"url":"\/documentation\/composablearchitecture\/teststore\/isdismissed","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/isDismissed","role":"symbol","type":"topic","title":"isDismissed","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the store’s feature has been dismissed."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDismissed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:_:assert:fileID:file:line:column:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/composablearchitecture\/teststore\/send(_:_:assert:fileid:file:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","role":"symbol","type":"topic","title":"send(_:_:assert:fileID:file:line:column:)","abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/skipReceivedActions(strict:fileID:file:line:column:)":{"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[{"text":"Clears the queue of received actions from effects.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/skipreceivedactions(strict:fileid:file:line:column:)","title":"skipReceivedActions(strict:fileID:file:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"skipReceivedActions","kind":"identifier"},{"kind":"text","text":"("},{"text":"strict","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipReceivedActions(strict:fileID:file:line:column:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/finish(timeout:fileID:file:line:column:)-klnc":{"abstract":[{"type":"text","text":"Suspends until all in-flight effects have finished, or until it times out."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:fileID:file:line:column:)-klnc","title":"finish(timeout:fileID:file:line:column:)","role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/finish(timeout:fileid:file:line:column:)-klnc","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","kind":"symbol","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/assert(_:fileID:file:line:column:)":{"abstract":[{"type":"text","text":"Assert against the current state of the store."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assert","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:fileID:file:line:column:)","title":"assert(_:fileID:file:line:column:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/composablearchitecture\/teststore\/assert(_:fileid:file:line:column:)","kind":"symbol"}}}