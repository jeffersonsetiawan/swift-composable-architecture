{"variants":[{"paths":["\/tutorials\/composablearchitecture\/syncupdetailnavigation"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"project","hierarchy":{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation"}]},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"}]},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting"}],"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation"},"metadata":{"categoryPathComponent":"BuildingSyncUps","role":"project","category":"Building SyncUps","title":"Navigating to a sync-up detail"},"sections":[{"estimatedTimeInMinutes":20,"content":[{"inlineContent":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"paragraph"}],"kind":"hero","chapter":"Navigating to sync-up detail","title":"Navigating to a sync-up detail"},{"tasks":[{"title":"Creating the app feature","anchor":"Creating-the-app-feature","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s create a new feature to hold the ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":"."}]}],"kind":"contentAndMedia"}],"stepsSection":[{"type":"step","runtimePreview":null,"caption":[{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"You may already have an App.swift in your project that holds the entry point of"},{"text":" ","type":"text"},{"text":"the application (i.e. ","type":"text"},{"code":"@main","type":"codeVoice"},{"text":"). If so, you can name this file AppFeature.swift, or you can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"rename the entry point to Main.swift."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"We often leave out suffixing reducers with names like “feature” or “reducer”, but in this","type":"text"},{"type":"text","text":" "},{"text":"case we must avoid conflicting with SwiftUI’s","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","type":"reference"},{"type":"text","text":" protocol, so we’ll use"},{"text":" ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"text":", instead.","type":"text"}]}],"name":"Note"}],"content":[{"inlineContent":[{"type":"text","text":"Create a new file called App.swift and paste in the basic scaffolding of a new"},{"type":"text","text":" "},{"type":"text","text":"Composable Architecture feature."}],"type":"paragraph"}],"code":"SyncUpDetailNavigation-01-code-0001.swift","media":null},{"inlineContent":[{"text":"This feature’s primary responsibility will be to integrate all the features that can be","type":"text"},{"type":"text","text":" "},{"text":"presented in the navigation stack. Currently that is only the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, which"},{"type":"text","text":" "},{"type":"text","text":"is always at the root of the stack, and the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature. Soon there will be more"},{"type":"text","text":" "},{"text":"features that can be presented in the stack, such as the record meeting feature and the past","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"meeting feature."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The sync-ups list feature is a little different from all of those other features, though."},{"text":" ","type":"text"},{"type":"text","text":"It is at the root of the stack, and it can not be dismissed. For that reason it is composed"},{"text":" ","type":"text"},{"type":"text","text":"into the "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by simply holding onto its state and actions, and using the"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference"},{"type":"text","text":" reducer to compose it into "},{"type":"codeVoice","code":"AppFeature"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"body"},{"text":".","type":"text"}],"type":"paragraph"},{"code":"SyncUpDetailNavigation-01-code-0002.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"SyncUpsList"},{"text":" reducer into the ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by holding onto its state and"},{"type":"text","text":" "},{"type":"text","text":"actions, and using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":" reducer to compose the two"},{"type":"text","text":" "},{"text":"reducers together.","type":"text"}]}],"media":null,"caption":[],"type":"step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we want to integrate the "},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" reducer into the ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":". The library comes"},{"type":"text","text":" "},{"type":"text","text":"with specific tools to do this for navigation stacks. It starts by using"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":", which is a collection type provided by the library"},{"text":" ","type":"text"},{"text":"specifically tuned for dealing with navigation stacks.","type":"text"}]},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the state of "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" in "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by holding onto"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":". We like to call this variable "},{"type":"codeVoice","code":"path"},{"text":" since it mimics","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"NavigationStack(path:)","type":"codeVoice"},{"text":" API in SwiftUI.","type":"text"}]}],"type":"step","media":null,"code":"SyncUpDetailNavigation-01-code-0003.swift","runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"However, this is not quite right. We don’t want to ","type":"text"},{"inlineContent":[{"type":"text","text":"only"}],"type":"emphasis"},{"type":"text","text":" show the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"navigation stack. Soon we will have a "},{"code":"RecordMeeting","type":"codeVoice"},{"text":" feature, and a ","type":"text"},{"code":"Meeting","type":"codeVoice"},{"type":"text","text":" feature,"},{"text":" ","type":"text"},{"text":"and in the future there may be more.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For this reason it is best to do some upfront work to model a feature that can handle any","type":"text"},{"type":"text","text":" "},{"text":"number of features on the stack. This works much like the ","type":"text"},{"type":"codeVoice","code":"Destination"},{"text":" reducer we created","type":"text"},{"type":"text","text":" "},{"text":"in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"text":".","type":"text"}]},{"type":"step","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducer inside "},{"type":"codeVoice","code":"AppFeature"},{"text":". Like the ","type":"text"},{"code":"Destination","type":"codeVoice"},{"type":"text","text":" reducer we defined for the"},{"type":"text","text":" "},{"type":"text","text":"sync-up detail screen, "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" type will be an "},{"type":"emphasis","inlineContent":[{"text":"enum","type":"text"}]},{"type":"text","text":" so that it can compose all of the"},{"type":"text","text":" "},{"text":"screens you can navigate to into a single reducer.","type":"text"}]}],"caption":[],"code":"SyncUpDetailNavigation-01-code-0004.swift"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case to the path for the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature. In the future more cases will be"},{"text":" ","type":"text"},{"text":"added to this enum for each kind of feature that can be pushed onto the stack.","type":"text"}]}],"runtimePreview":null,"code":"SyncUpDetailNavigation-01-code-0005.swift","caption":[],"type":"step"},{"inlineContent":[{"type":"text","text":"That’s all it takes to create a single reducer that encapsulates all of the logic and behavior"},{"type":"text","text":" "},{"type":"text","text":"of each screen in the navigation stack. In the future as we add more screens to the stack"},{"type":"text","text":" "},{"type":"text","text":"we will just add more cases to this reducer."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we will integrate the "},{"code":"Path","type":"codeVoice"},{"type":"text","text":" reducer into the "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" reducer."}]},{"code":"SyncUpDetailNavigation-01-code-0006.swift","caption":[{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to maintain "},{"type":"codeVoice","code":"State"},{"type":"text","text":"’s "},{"code":"Equatable","type":"codeVoice"},{"text":", we must conform ","type":"text"},{"code":"Path.State","type":"codeVoice"},{"type":"text","text":" to be"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" as well."}]}],"style":"important"}],"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"Update the ","type":"text"},{"code":"path","type":"codeVoice"},{"type":"text","text":" variable to hold onto "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":" of"},{"type":"text","text":" "},{"code":"Path.State","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null},{"type":"step","caption":[{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Right now we don’t need to perform any logic in the "},{"type":"codeVoice","code":".path"},{"type":"text","text":" action so we can return"},{"text":" ","type":"text"},{"code":".none","type":"codeVoice"},{"type":"text","text":" in it."}]}],"type":"aside"}],"media":null,"code":"SyncUpDetailNavigation-01-code-0007.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Integrate the ","type":"text"},{"code":"Path","type":"codeVoice"},{"text":"’s actions into ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":" by adding a case to its "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum, and using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","isActive":true},{"type":"text","text":". We can use the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","type":"reference","isActive":true},{"text":" type alias to specify a single generic of the path","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer."}]}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"type":"text","text":" is a type that represents the most"},{"type":"text","text":" "},{"type":"text","text":"fundamental things that can happen in a stack: an element in the stack can send an action"},{"type":"text","text":" "},{"type":"text","text":"("},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)"},{"type":"text","text":"), or it can push an element"},{"type":"text","text":" "},{"type":"text","text":"onto the stack ("},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","isActive":true},{"type":"text","text":"), or it can"},{"type":"text","text":" "},{"text":"pop an element from the stack (","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","isActive":true,"type":"reference"},{"type":"text","text":")."}]},{"caption":[],"media":null,"runtimePreview":null,"code":"SyncUpDetailNavigation-01-code-0008.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducer into the "},{"code":"body","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"text":" reducer by using the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true,"type":"reference"},{"type":"text","text":" operator."}]}]},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true,"type":"reference"},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operator takes care of processing an incoming "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","isActive":true},{"text":", routing","type":"text"},{"type":"text","text":" "},{"text":"it to the current reducer in the stack, and automatically cancelling effects when a feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is popped from the stack."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"That is all it takes to create the ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"text":" reducer and integrate the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" into the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"stack. Next We will create the view layer."}]}]},{"title":"Creating the app view","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s create the view that holds onto the "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":"."}]}],"mediaPosition":"trailing"}],"anchor":"Creating-the-app-view","stepsSection":[{"caption":[],"code":"SyncUpDetailNavigation-02-code-0001.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"AppView"},{"text":" struct to conform to the ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" protocol in SwiftUI.","type":"text"}]}],"media":null,"type":"step"},{"media":null,"code":"SyncUpDetailNavigation-02-code-0002.swift","content":[{"inlineContent":[{"type":"text","text":"Add a "},{"code":"store","type":"codeVoice"},{"type":"text","text":" property to the view. We are going to be proactive and make the property"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Bindable"},{"text":" because we will need to derive a binding to it for the ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","caption":[],"runtimePreview":null},{"caption":[],"media":null,"code":"SyncUpDetailNavigation-02-code-0003.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement the "},{"type":"codeVoice","code":"body"},{"text":" of the view by constructing a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":", but we will be using"},{"text":" ","type":"text"},{"text":"special initializer that comes with the library:","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","type":"reference","isActive":true},{"type":"text","text":". This initializer takes"},{"type":"text","text":" "},{"text":"a binding to a store focused on the stack domain, as well as two trailing closures. The","type":"text"},{"text":" ","type":"text"},{"text":"first for the root view that is always present, and the second for the destinations that","type":"text"},{"type":"text","text":" "},{"text":"can be  pushed onto the stack.","type":"text"}]}]},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For the root view we can construct the "},{"code":"SyncUpsListView","type":"codeVoice"},{"text":" by using","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"type":"text","text":" on the "},{"type":"codeVoice","code":"store"},{"text":" to isolate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" domain."}]}],"type":"step","code":"SyncUpDetailNavigation-02-code-0004.swift","media":null,"runtimePreview":null},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers"},{"type":"text","text":" for more information on this tool."}]}],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"destination","type":"codeVoice"},{"text":" trailing closure is handed a ","type":"text"},{"type":"codeVoice","code":"store"},{"type":"text","text":" focused on the path’s state, which"},{"text":" ","type":"text"},{"text":"is an enum. Because we are using the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"type":"text","text":" macro on a "},{"type":"codeVoice","code":"Path"},{"text":" enum we get access","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to a special super power of enum reducers. We can switch on "},{"code":"store.case","type":"codeVoice"},{"text":" to destructure","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a child store for each case of the enum."}]}],"code":"SyncUpDetailNavigation-02-code-0005.swift","runtimePreview":null},{"content":[{"inlineContent":[{"text":"For each case in the enum we will destructure the store and construct the corresponding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"destination view by handing the store to the view."}],"type":"paragraph"}],"code":"SyncUpDetailNavigation-02-code-0006.swift","caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"SyncUpDetailNavigation-02-code-0007.swift","content":[{"inlineContent":[{"type":"text","text":"Add a preview to the bottom of the file."}],"type":"paragraph"}],"caption":[],"media":null,"runtimePreview":null,"type":"step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s all it takes to build the root "},{"type":"codeVoice","code":"AppView"},{"text":" that holds onto a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":". But"},{"type":"text","text":" "},{"type":"text","text":"currently we do not have any buttons to actually navigate to the detail screen from the list"},{"text":" ","type":"text"},{"text":"screen.","type":"text"}]}]},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"To navigate to the detail screen from the list screen we need to append some","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail.State"},{"text":" to the ","type":"text"},{"code":"path","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"App","type":"codeVoice"},{"text":" feature. The easiest way to do this is with","type":"text"},{"text":" ","type":"text"},{"text":"a ","type":"text"},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":", which will automatically append some state to the path when tapped."}]}]}],"stepsSection":[{"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Go to the SyncUpsList.swift file where the "},{"type":"codeVoice","code":"SyncUpListView"},{"text":" is defined. In that view we","type":"text"},{"text":" ","type":"text"},{"text":"currently have a ","type":"text"},{"type":"codeVoice","code":"Button"},{"text":" in the list. Let’s now replace it with a ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"type":"text","text":", but"},{"type":"text","text":" "},{"text":"using the special initializer that comes with this library:","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"code":"SyncUpDetailNavigation-03-code-0001.swift","caption":[],"media":null},{"type":"paragraph","inlineContent":[{"text":"This special initializer takes a piece of state that matches the type that is held in the","type":"text"},{"type":"text","text":" "},{"text":"root feature’s ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":". In our case, that is "},{"type":"codeVoice","code":"AppFeature.Path.State"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which is an enum of all the possible destinations that can be navigated to.","type":"text"}]},{"type":"step","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Provide ","type":"text"},{"code":"Path.State.detail","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"text":" to indicate that we want to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"navigate to the detail feature."}]}],"code":"SyncUpDetailNavigation-03-code-0002.swift"},{"inlineContent":[{"text":"However, to construct ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail.State"},{"type":"text","text":" we need to provide a "},{"code":"Shared<SyncUp>","type":"codeVoice"},{"type":"text","text":" value."},{"type":"text","text":" "},{"type":"text","text":"This needs to be derived from the shared sync-ups held in "},{"type":"codeVoice","code":"SyncUpsList.State"},{"text":" so that the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"detail feature can be allowed to make edits to the state have those edits be automatically"},{"text":" ","type":"text"},{"type":"text","text":"made to "},{"type":"codeVoice","code":"SyncUpsList.State"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One can use the projected value of "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" in order to derive a "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" value for each"},{"type":"text","text":" "},{"type":"text","text":"element in the collection."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Convert the shared collection of sync-ups into a collection of shared sync-ups and pass it"},{"text":" ","type":"text"},{"type":"text","text":"along to "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":"."}]}],"type":"step","code":"SyncUpDetailNavigation-03-code-0003.swift","caption":[{"style":"tip","type":"aside","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"While we use an ","type":"text"},{"type":"codeVoice","code":"Array"},{"text":" initializer to do this conversion, it is possible to use any range","type":"text"},{"type":"text","text":" "},{"type":"text","text":"replaceable collection."}]}]}],"runtimePreview":null,"media":null},{"code":"SyncUpDetailNavigation-03-code-0004.swift","media":null,"runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Pass the projected value ","type":"text"},{"code":"$syncUp","type":"codeVoice"},{"type":"text","text":" to "},{"code":"SyncUpDetail.State","type":"codeVoice"},{"type":"text","text":"."}]}]},{"inlineContent":[{"type":"text","text":"That is all it takes to perform a navigation from the list feature to the detail feature."},{"text":" ","type":"text"},{"type":"text","text":"When the navigation link is tapped, SwiftUI will search up the view hierarchy to find the"},{"text":" ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" powering the view, find its "},{"type":"codeVoice","code":"path"},{"text":" binding, and append the new ","type":"text"},{"type":"codeVoice","code":".detail"},{"text":" ","type":"text"},{"type":"text","text":"state to the path, thus triggering a drill-down animation."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the easiest way to navigate to one screen to another, but it does have some drawbacks."},{"type":"text","text":" "},{"text":"Because we need to reference all of ","type":"text"},{"type":"codeVoice","code":"AppFeature.State.Path"},{"text":" to construct a navigation link, it can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"make modularization difficult. Every navigation link will need access to every feature’s"},{"text":" ","type":"text"},{"type":"text","text":"state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An alternative is to use a plain "},{"type":"codeVoice","code":"Button"},{"text":" instead of ","type":"text"},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":", and send an action"},{"type":"text","text":" "},{"text":"from that button. Then the parent ","type":"text"},{"type":"codeVoice","code":"App"},{"type":"text","text":" feature can intercept that action and manually append"},{"text":" ","type":"text"},{"text":"state to its ","type":"text"},{"type":"codeVoice","code":"path"},{"text":". This fully decouples the features from one another, and only the ","type":"text"},{"code":"App","type":"codeVoice"},{"type":"text","text":" "},{"text":"feature needs to have knowledge about all of the child features.","type":"text"}]},{"inlineContent":[{"text":"We will not do that refactor now, but it would be instructive for the reader to try it","type":"text"},{"type":"text","text":" "},{"text":"themselves.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Before moving on let’s make sure that the deletion and editing logic that we implemented in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the detail screens properly works now that we can navigate to the detail screen from the"},{"text":" ","type":"text"},{"text":"sync-ups list screen.","type":"text"}]},{"type":"step","code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the detail screen of a sync-up and delete it to confirm that it works as"},{"type":"text","text":" "},{"text":"expected.","type":"text"}]}],"runtimePreview":null,"caption":[],"media":"SyncUpDetailNavigation-03-video-0005.mov"},{"code":null,"runtimePreview":null,"caption":[],"media":"SyncUpDetailNavigation-03-video-0006.mov","content":[{"inlineContent":[{"type":"text","text":"Navigate to the detail screen of a sync-up, edit it, and then navigate back to the list"},{"type":"text","text":" "},{"type":"text","text":"screen to verify that changes were made. Also relaunch the app to confirm that the data"},{"type":"text","text":" "},{"text":"was persisted to disk.","type":"text"}],"type":"paragraph"}],"type":"step"}],"title":"Navigating to the detail","anchor":"Navigating-to-the-detail"}],"kind":"tasks"},{"action":{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"type":"reference"},"abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Navigating to a meeting"}],"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"kind":"section","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"text":" ","type":"text"},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","title":"Adding a sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"text":" ","type":"text"},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","title":"SyncUpsList feature","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"kind":"project","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","title":"What is SyncUps?","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/whatissyncups","role":"project"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","title":"Scope","kind":"symbol","url":"\/documentation\/composablearchitecture\/scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}]},"SyncUpDetailNavigation-01-code-0006.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-01-code-0006.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":12},{"line":30}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/listsofsyncups","title":"Lists of sync-ups","kind":"project","role":"project"},"https://developer.apple.com/documentation/swiftui/app":{"type":"link","titleInlineContent":[{"type":"text","text":"App"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","title":"App"},"SyncUpDetailNavigation-01-code-0001.swift":{"fileType":"swift","identifier":"SyncUpDetailNavigation-01-code-0001.swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","  }","  enum Action {","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      }","    }","  }","}"],"type":"file","syntax":"swift","highlights":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"type":"topic","abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in","type":"text"},{"type":"text","text":" "},{"text":"parent state.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Destination"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","title":"forEach(_:action:destination:fileID:filePath:line:column:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","kind":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"kind":"section","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"text":"feature to make things a little more interesting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","title":"Form focus: an approach","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","title":"A basic timer","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","title":"Navigate to a meeting","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"kind":"project","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","title":"Sync-up form","estimatedTime":"15min","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupform","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","title":"Navigating to the detail","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"estimatedTime":"25min","url":"\/tutorials\/composablearchitecture\/implementingtimer","title":"Adding a meeting timer","kind":"project","role":"project"},"SyncUpDetailNavigation-03-code-0003.swift":{"type":"file","identifier":"SyncUpDetailNavigation-03-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(Array(store.$syncUps)) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"fileName":"SyncUpsList.swift","syntax":"swift","highlights":[{"line":14}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"kind":"section","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","title":"Domain models","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","role":"pseudoSymbol"},"SyncUpDetailNavigation-03-code-0001.swift":{"type":"file","fileName":"SyncUpsList.swift","identifier":"SyncUpDetailNavigation-03-code-0001.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: ","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"highlights":[{"line":15},{"line":16},{"line":17}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","abstract":[],"url":"\/tutorials\/buildingsyncups\/record-meeting","title":"Record meeting","kind":"article","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","title":"Removing attendees","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","title":"Lists of sync-ups","type":"topic","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"kind":"section","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"type":"text","text":" "},{"text":"fragile.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","title":"Non-exhaustive testing","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","abstract":[{"type":"text","text":"The "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"text":" ","type":"text"},{"type":"text","text":"changes with confidence."}],"estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","title":"Testing the sync-up detail","kind":"project","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/persistingsyncups","title":"Persisting sync-ups","kind":"project","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"text":"previous recorded meeting.","type":"text"}],"estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/meetingnavigation","title":"Navigating to a meeting","kind":"project","role":"project"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","title":"Navigating to sync-up detail","type":"topic","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"StackAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","title":"StackAction","navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/stackaction","role":"symbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","title":"What is SyncUps?","type":"topic","url":"\/tutorials\/buildingsyncups\/what-is-syncups-","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"estimatedTime":"30min","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","title":"Editing and deleting a sync-up","kind":"project","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"kind":"section","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","title":"Ending the meeting early","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"StackAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">\n","kind":"text"}],"abstract":[{"type":"text","text":"A special overload of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"reference","isActive":true},{"type":"text","text":" for enum"},{"type":"text","text":" "},{"text":"reducers.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","title":"forEach(_:action:)","kind":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"kind":"section","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","title":"Writing your first test","type":"section","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","title":"Integrating the feature domains together","kind":"section","role":"pseudoSymbol"},"SyncUpDetailNavigation-01-code-0002.swift":{"type":"file","identifier":"SyncUpDetailNavigation-01-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":8},{"line":11},{"line":14},{"line":15},{"line":16},{"line":19},{"line":20}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"kind":"section","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","title":"Adding a new sync-up to the list","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","title":"More concise domain modeling","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"kind":"section","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","title":"A tour of SyncUps","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"type":"text","text":" "},{"text":"previous recorded meeting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","title":"The meeting screen","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","title":"The RecordMeeting feature","kind":"project","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"kind":"project","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"type":"text","text":" "},{"text":"to use Apple’s ","type":"text"},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","title":"Adding a speech recognizer","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","role":"project"},"SyncUpDetailNavigation-02-code-0006.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-02-code-0006.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}"],"highlights":[{"line":22}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"kind":"section","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use Apple’s "},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"text":"in progress.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","title":"Asking for speech recognition permission","type":"section","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","navigatorTitle":[{"text":"StackActionOf","kind":"identifier"}],"abstract":[{"type":"text","text":"A convenience type alias for referring to a stack action of a given reducer’s domain."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackActionOf","kind":"identifier"}],"title":"StackActionOf","url":"\/documentation\/composablearchitecture\/stackactionof","kind":"symbol","role":"symbol"},"SyncUpDetailNavigation-02-code-0007.swift":{"type":"file","identifier":"SyncUpDetailNavigation-02-code-0007.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}","","#Preview {","  AppView(","    store: Store(","      initialState: AppFeature.State(","        syncUpsList: SyncUpsList.State()","      )","    ) {","      AppFeature()","    }","  )","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","title":"Editing the sync-up","kind":"section","role":"pseudoSymbol"},"SyncUpDetailNavigation-02-code-0001.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-02-code-0001.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","}"],"highlights":[{"line":8},{"line":9},{"line":10}],"fileType":"swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationLink/init(state:label:fileID:filePath:line:column:)":{"kind":"symbol","title":"init(state:label:fileID:filePath:line:column:)","conformance":{"constraints":[{"code":"Label","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":" and ","type":"text"},{"code":"Destination","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"L"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"P","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"label"},{"text":": () -> ","kind":"text"},{"text":"L","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui\/navigationlink\/init(state:label:fileid:filepath:line:column:)","abstract":[{"type":"text","text":"Creates a navigation link that presents the view corresponding to an element of"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":".","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","title":"Persisting data to disk","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/testingsyncupform","title":"Testing the sync-up form","kind":"project","role":"project"},"SyncUpDetailNavigation-01-code-0005.swift":{"type":"file","identifier":"SyncUpDetailNavigation-01-code-0005.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":8}],"fileType":"swift"},"SyncUpDetailNavigation-02-code-0004.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-02-code-0004.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      ","    }","  }","}"],"highlights":[{"line":16},{"line":17},{"line":18}],"fileType":"swift"},"SyncUpDetailNavigation-02-code-0003.swift":{"type":"file","identifier":"SyncUpDetailNavigation-02-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","","    } destination: { store in","      ","    }","  }","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}],"fileType":"swift"},"SyncUpDetailNavigation-02-code-0005.swift":{"highlights":[{"line":20},{"line":21},{"line":22},{"line":23}],"fileType":"swift","fileName":"App.swift","type":"file","syntax":"swift","identifier":"SyncUpDetailNavigation-02-code-0005.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        ","      }","    }","  }","}"]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","abstract":[{"text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"text":" ","type":"text"},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","title":"Building SyncUps","type":"topic","url":"\/tutorials\/buildingsyncups","role":"overview"},"SyncUpDetailNavigation-03-code-0004.swift":{"type":"file","identifier":"SyncUpDetailNavigation-03-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.$syncUps) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: $syncUp))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"fileName":"SyncUpsList.swift","syntax":"swift","highlights":[{"line":14},{"line":16}],"fileType":"swift"},"SyncUpDetailNavigation-02-code-0002.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-02-code-0002.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","}"],"highlights":[{"line":10}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"text":" ","type":"text"},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","title":"Create the sync-up detail","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","conformance":{"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">>>, ","kind":"text"},{"text":"root","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Drives a navigation stack with a store."}],"title":"init(path:root:destination:fileID:filePath:line:column:)"},"SyncUpDetailNavigation-03-code-0002.swift":{"type":"file","identifier":"SyncUpDetailNavigation-03-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"fileName":"SyncUpsList.swift","syntax":"swift","highlights":[{"line":16}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"kind":"section","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","title":"Controlling dependencies early","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"type":"text","text":" "},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"type":"text","text":" "},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/syncupdetail","title":"Sync-up detail","kind":"project","role":"project"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Destination-and-path-reducers":{"title":"Destination and path reducers","type":"topic","url":"\/documentation\/composablearchitecture\/reducer#Destination-and-path-reducers","abstract":[],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","title":"scope(state:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"kind":"symbol","abstract":[{"text":"An action sent to dismiss the associated stack element at a given identifier.","type":"text"}],"url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","title":"StackAction.popFrom(id:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"popFrom","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"kind":"project","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"type":"text","text":" "},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","title":"Testing the list of sync-ups","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"kind":"project","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"text":" ","type":"text"},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","title":"Testing navigation","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingnavigation","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"kind":"section","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","title":"Form focus: a better approach","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"kind":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","title":"Navigating to the record meeting feature","type":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","title":"Creating the app view","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/element(id:action:)":{"kind":"symbol","abstract":[{"text":"An action sent to the associated stack element at a given identifier.","type":"text"}],"url":"\/documentation\/composablearchitecture\/stackaction\/element(id:action:)","title":"StackAction.element(id:action:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"element","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","title":"Creating the app feature","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/push(id:state:)":{"title":"StackAction.push(id:state:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StackElementID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"kind":"text","text":", "},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","abstract":[{"text":"An action sent to present the given state at a given identifier in a navigation stack. This","type":"text"},{"type":"text","text":" "},{"type":"text","text":"action is typically sent from the view via the "},{"type":"codeVoice","code":"NavigationLink(value:)"},{"type":"text","text":" initializer."}],"url":"\/documentation\/composablearchitecture\/stackaction\/push(id:state:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"kind":"section","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","title":"Deleting the sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","role":"pseudoSymbol"},"SyncUpDetailNavigation-01-code-0007.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-01-code-0007.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":16},{"line":25},{"line":26}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"kind":"section","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","title":"Deleting a sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","title":"New sync-up form","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","title":"Adding attendees","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StackState","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"title":"StackState","type":"topic"},"SyncUpDetailNavigation-01-code-0003.swift":{"type":"file","identifier":"SyncUpDetailNavigation-01-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":8}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","title":"Persisting sync-ups to disk","type":"topic","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"title":"Testing the timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"kind":"project","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","title":"Testing the add sync-up flow","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","title":"Testing persistence","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","title":"Sync-up detail","type":"topic","url":"\/tutorials\/buildingsyncups\/sync-up-detail","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"kind":"project","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","title":"Navigating to a sync-up detail","estimatedTime":"20min","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"kind":"project","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","title":"Presenting the sync-up form","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","abstract":[{"type":"text","text":"The "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","title":"Testing the edit flow","kind":"section","role":"pseudoSymbol"},"SyncUpDetailNavigation-03-video-0006.mov":{"poster":null,"alt":null,"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0006.mov"}],"identifier":"SyncUpDetailNavigation-03-video-0006.mov"},"SyncUpDetailNavigation-01-code-0004.swift":{"type":"file","identifier":"SyncUpDetailNavigation-01-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"fileName":"App.swift","syntax":"swift","highlights":[{"line":6},{"line":7},{"line":8}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"kind":"section","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"text":" ","type":"text"},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","title":"Create a new feature","type":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"text":" protocol for a type.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"title":"Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"kind":"section","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","title":"Sync-up form basics","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","title":"Integrating the feature views together","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","title":"Create the SyncUps project","kind":"section","role":"pseudoSymbol"},"SyncUpDetailNavigation-01-code-0008.swift":{"type":"file","fileName":"App.swift","identifier":"SyncUpDetailNavigation-01-code-0008.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","    .forEach(\\.path, action: \\.path)","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":31}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","abstract":[],"url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","title":"Presenting the sync-up form","kind":"article","role":"article"},"SyncUpDetailNavigation-03-video-0005.mov":{"poster":null,"alt":null,"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0005.mov"}],"identifier":"SyncUpDetailNavigation-03-video-0005.mov"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","title":"A handy debugging tool","kind":"section","role":"pseudoSymbol"}}}